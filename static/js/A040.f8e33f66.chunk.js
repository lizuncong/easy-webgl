"use strict";(self.webpackChunkWebGL=self.webpackChunkWebGL||[]).push([[808],{7243:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});t(5043);var r=t(8044),g=t(579);const o=function(){return(0,g.jsx)(r.A,{srcDoc:"## \u4e3a\u4ec0\u4e48WebGL\u7eb9\u7406\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\n\n## \u524d\u8a00\n\u5728WebGL\u4e2d\u7ed8\u5236\u56fe\u7247\u9700\u8981\u4f7f\u7528`\u7eb9\u7406\u6570\u636e`\u3002\u548cWebGL\u6e32\u67d3\u65f6\u9700\u8981\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u76f8\u4f3c\uff0c\u6e32\u67d3\u7eb9\u7406\u65f6\u9700\u8981\u7eb9\u7406\u5750\u6807\uff0c\u800c\u4e0d\u662f\u50cf\u7d20\u5750\u6807\u3002`\u7eb9\u7406\u6570\u636e`\u7684\u7c7b\u578b\u975e\u5e38\u4e30\u5bcc\uff0c\u6bd4\u5982\u56fe\u50cf\u6570\u636e\uff0cJS\u751f\u6210\u7684\u6570\u636e\u7eb9\u7406\u7b49\u3002\u672c\u8282\u6240\u8bf4\u7684\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\uff0c\u5b9e\u9645\u4e0a\u8bf4\u7684\u662fWebGL\u5728\u5c06\u56fe\u50cf\u7eb9\u7406\u6570\u636e\u7ed8\u5236\u5230WebGL\u753b\u5e03\u65f6\uff0c\u753b\u5e03\u7684\u56fe\u7247\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\u3002\u672c\u8282\u6211\u4eec\u5c31\u6df1\u5165\u5256\u6790\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u7eb9\u7406\u7684\u5de5\u4f5c\u539f\u7406\u548c\u7eb9\u7406\u6570\u636e\u7c7b\u578b\u3002\n\n\n### \u7eb9\u7406\u6570\u636e\u7c7b\u578b\nWebGL\u7eb9\u7406\u6570\u636e\u7684\u7c7b\u578b\u975e\u5e38\u4e30\u5bcc\uff0c\u6db5\u76d6\u56fe\u50cf\u3001\u7a0b\u5e8f\u751f\u6210\u7684\u6570\u636e\u3001\u7279\u6b8a\u6548\u679c\u6620\u5c04\u7b49\u3002**WebGL\u7eb9\u7406\u6570\u636e\u7684\u5e95\u5c42\u901a\u5e38\u662f\u6570\u7ec4\u5f62\u5f0f\u7684**\u3002\u4ee5\u4e0b\u662f\u5e38\u89c1\u7684\u7eb9\u7406\u6570\u636e\u5206\u7c7b\u53ca\u5176\u7279\u70b9\uff1a\n- **1.\u57fa\u7840\u56fe\u50cf\u6570\u636e\uff1a**\u901a\u8fc7\u56fe\u50cf\u6587\u4ef6(\u5982PNG\u3001JPEG\u7b49)\u52a0\u8f7d\u76842D\u7eb9\u7406\uff0c\u662f\u6700\u5e38\u89c1\u7684\u7c7b\u578b\u3002\u56fe\u50cf\u7eb9\u7406\u7684\u4f7f\u7528\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0[WebGL\u56fe\u50cf\u5904\u7406](https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-image-processing.html)\u3002\u56fe\u50cf\u7c7b\u7eb9\u7406\u52a0\u8f7d\u540e\uff0c\u4f1a\u89e3\u7801\u4e3a\u50cf\u7d20\u503c\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u6216\u900f\u660e\u5ea6\uff0c\u518d\u901a\u8fc7gl.texImage2D\u4e0a\u4f20\u5230GPU\u3002WebGL\u4f1a\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u7eb9\u7406\u7684\u5185\u90e8\u683c\u5f0f\uff08\u5982gl.RGBA8\u3001gl.RGBA32F\uff09\u3002\n- **2.\u7a0b\u5e8f\u751f\u6210\u7684\u6570\u636e\u7eb9\u7406\uff1a**\u65e0\u9700\u5916\u90e8\u56fe\u50cf\uff0c\u76f4\u63a5\u901a\u8fc7JS\u751f\u6210\u7684\u6570\u636e\u7eb9\u7406\u3002\u6570\u636e\u7eb9\u7406\u76f4\u63a5\u4f7f\u7528\u6570\u503c\u6570\u7ec4\uff08\u5982Float32Array\u3001Uint8Array\uff09\u751f\u6210\u7eb9\u7406\u5e76\u4e0a\u4f20\u5230GPU\u3002\u6570\u636e\u7eb9\u7406\u7684\u4f7f\u7528\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0[WebGL\u6570\u636e\u7eb9\u7406](https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-data-textures.html)\n\n\n### \u7eb9\u7406\u7684\u5de5\u4f5c\u539f\u7406\n- **1.\u52a0\u8f7d\u4e0e\u521b\u5efa\uff1a**\u4f7f\u7528gl.texImage2D\u5c06`\u7eb9\u7406\u6570\u636e`\u4e0a\u4f20\u5230GPU\n- **2.\u7eb9\u7406\u5750\u6807\u6620\u5c04\uff1a**\u6a21\u578b\u9876\u70b9\u901a\u8fc7(u,v)\u7eb9\u7406\u5750\u6807(\u8303\u56f4[0,1]\u6216[1,0])\u7ed1\u5b9a\u5230\u7eb9\u7406\n- **3.\u7740\u8272\u5668\u91c7\u6837\uff1a**\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u901a\u8fc7texture2D\u51fd\u6570\u83b7\u53d6\u50cf\u7d20\u503c\uff0c\u5e76\u8ba1\u7b97\u6700\u7ec8\u989c\u8272\u3002\n\n\ngl.texImage2D\u662fOpenGL/WebGL\u4e2d\u7528\u4e8e\u5c062D\u7eb9\u7406\u6570\u636e\u4e0a\u4f20\u5230GPU\u7684\u6838\u5fc3\u51fd\u6570\u3002\u5b83\u7684\u5e95\u5c42\u64cd\u4f5c\u4f1a\u6839\u636e\u4f20\u5165\u6570\u636e\u7684\u7c7b\u578b\uff08\u56fe\u50cf\u7eb9\u7406\u6216\u6570\u636e\u7eb9\u7406\uff09\u6709\u4e0d\u540c\u7684\u5904\u7406\u903b\u8f91\u3002\u65e0\u8bba\u6570\u636e\u7c7b\u578b\u5982\u4f55\uff0cgl.texImage2D\u7684\u6700\u7ec8\u76ee\u6807\u662f\u5c06\u6570\u636e\u5b58\u50a8\u5230GPU\u7684\u7eb9\u7406\u5185\u5b58\u4e2d\uff0c\u4f9b\u7740\u8272\u5668\u91c7\u6837\u3002\u5176\u6838\u5fc3\u6b65\u9aa4\u5305\u62ec\uff1a\n\n- \u6570\u636e\u683c\u5f0f\u8f6c\u6362\uff1a\u5c06CPU\u4fa7\u7684\u6570\u7ec4\u6216\u56fe\u50cf\u6570\u636e\u8f6c\u6362\u4e3aGPU\u53ef\u8bc6\u522b\u7684\u5185\u90e8\u683c\u5f0f\uff08\u5982 GL_RGBA8\u3001GL_RGBA32F\uff09\u3002\n- \u5185\u5b58\u5206\u914d\uff1a\u5728GPU\u4e0a\u4e3a\u7eb9\u7406\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\n- \u6570\u636e\u62f7\u8d1d\uff1a\u5c06CPU\u6570\u636e\u590d\u5236\u5230GPU\u5185\u5b58\u3002\n- MIPMAP\u751f\u6210\uff08\u53ef\u9009\uff09\uff1a\u6839\u636e\u53c2\u6570\u81ea\u52a8\u751f\u6210\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff08MIPMAP\uff09\u3002\n\n> \u56e0\u6b64\uff0c\u4e0d\u7ba1\u662f\u56fe\u50cf\u7eb9\u7406\u6570\u636e\u8fd8\u662f\u6570\u636e\u7eb9\u7406\uff0c\u6700\u7ec8\u5728GPU\u7eb9\u7406\u5185\u5b58\u4e2d\u90fd\u662f\u7c7b\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u50a8\n\n\n\n### \u7eb9\u7406\u5750\u6807\n\u7eb9\u7406\u662f\u901a\u8fc7\u201c\u7eb9\u7406\u5750\u6807\u201d\u6765\u5f15\u7528\u7684\uff0c\u7eb9\u7406\u5750\u68070.0\u52301.0\u5bf9\u5e94\u7eb9\u7406\u4ece\u5de6\u5230\u53f3\uff0c0.0\u52301.0\u5bf9\u5e94\u7b2c\u4e00\u4e2a\u50cf\u7d20\u6240\u5728\u884c\u5230\u6700\u540e\u4e00\u884c\u3002\u4e0a\u4e0b\u5728\u7eb9\u7406\u5750\u6807\u7a7a\u95f4\u4e2d\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4e3b\u8981\u662f\u4f9d\u636e\u4f20\u9012\u7ed9WebGL\u7684\u7eb9\u7406\u6570\u636e\uff0c\u7eb9\u7406\u6570\u636e\u7684\u5f00\u5934\u5bf9\u5e94\u7eb9\u7406\u5750\u6807(0,0)\uff0c\u7ed3\u5c3e\u5bf9\u5e94\u7eb9\u7406\u5750\u6807(1,1)\n\n\u200b\u7eb9\u7406\u5750\u6807\u662f\u5c06\u7eb9\u7406\u6620\u5c04\u5230\u4e09\u7ef4\u7269\u4f53\u8868\u9762\u7684\u5173\u952e\u673a\u5236\u3002\u7eb9\u7406\u5750\u6807\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u4e09\u7ef4\u9876\u70b9\u5728\u7eb9\u7406\u56fe\u50cf\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u544a\u8bc9 WebGL\uff1a\u201c\u8fd9\u4e2a\u9876\u70b9\u5e94\u8be5\u663e\u793a\u7eb9\u7406\u56fe\u50cf\u7684\u54ea\u4e2a\u90e8\u5206\u201d\n\n\u4e0b\u9762\u901a\u8fc7\u4f8b\u5b50\u6765\u6f14\u793a\u4e0d\u540c\u7c7b\u578b\u7eb9\u7406\u6570\u636e\uff0c\u5982\u4f55\u901a\u8fc7\u7eb9\u7406\u5750\u6807\u5f15\u7528\u3002\u6211\u4eec\u5c06\u5728\u753b\u5e03(0, 0)\u5230(0.5, 0.5)\u5904\u4f7f\u7528\u7eb9\u7406\u7ed8\u5236\u77e9\u5f62\u3002\n\n![image](../../easy-webgl/coor_01.png)\n\n\u5bf9\u5e94\u7684\u77e9\u5f62\u7684\u9876\u70b9\u5750\u6807\u4e3a\uff1a\n```js\nconst rectX = 0.0, rectY = 0.5, rectWidth = 0.5, rectHeight = 0.5\nlet verticesInfo = [\n    rectX, rectY,\n    rectX + rectWidth, rectY,\n    rectX, rectY - rectHeight,\n    rectX, rectY - rectHeight,\n    rectX + rectWidth, rectY,\n    rectX + rectWidth, rectY - rectHeight,\n]\n```\n\n\n#### \u6570\u636e\u7eb9\u7406\n\u6211\u4eec\u4f7f\u7528\u4e0b\u9762 `4 x 4` \u50cf\u7d20\u7684\u6570\u636e\u7eb9\u7406\u586b\u5145\u4e0a\u9762\u7684\u77e9\u5f62\n```js\n  // \u7528 4x4 \u7684\u50cf\u7d20\u586b\u5145\u7eb9\u7406\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 4;\n  const height = 4;\n  const border = 0;\n  const format = gl.RGBA;\n  const type = gl.UNSIGNED_BYTE;\n  const data = new Uint8Array([\n    255, 0, 0, 255, // \u7ea2\n    0, 255, 0, 255, // \u7eff\n    0, 0, 255, 255, // \u84dd\n    255, 255, 0, 255, // \u9ec4\n\n    255, 0, 255, 255, // \u54c1\u7ea2\u8272\n    0, 255, 255, 255, // \u9752\u8272\n    105, 255, 105, 255,   // \u9752\u67e0\u7eff\n    0, 0, 0, 255, // \u9ed1\u8272\n\n\n    255, 165, 0, 255,    // \u6a59\u8272\n    75, 32, 132, 255,    // \u6df1\u7d2b\u8272\n    255, 218, 0, 255,    // \u91d1\u8272\n    124, 252, 0,  255,   // \u8367\u5149\u7eff\n\n    255, 20, 133, 255,      // \u73ca\u745a\u8272\n    255, 182, 193, 255,   // \u6de1\u7c89\u7ea2\n    138, 43, 238, 255,    // \u9b54\u6cd5\u84dd\n    255, 255, 255, 255,     // \u767d\u8272\n  ]);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    level,\n    internalFormat,\n    width,\n    height,\n    border,\n    format,\n    type,\n    data\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n```\n\n\u5982\u679c\u7528\u7eb9\u7406\u5750\u6807\u8868\u793a\u6570\u636e\u7eb9\u7406\uff0c\u90a3\u4e48\u6570\u636e\u7eb9\u7406\u7684\u7b2c\u4e00\u4e2a\u989c\u8272(\u5373\u7ea2\u8272)\u50cf\u7d20\u4f4d\u4e8e\u5de6\u4e0b\u89d2\uff0c\u6700\u540e\u4e00\u4e2a\u989c\u8272(\u5373\u767d\u8272)\u50cf\u7d20\u4f4d\u4e8e\u53f3\u4e0a\u89d2\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![image](../../easy-webgl/coor_02.jpg)\n\n\u73b0\u5728\u6211\u4eec\u7528\u8fd9\u4e2a\u6570\u636e\u7eb9\u7406\u586b\u5145\u4e0a\u9762\u7684\u77e9\u5f62\uff0c\u6211\u4eec\u7ed9WebGL\u63d0\u4f9b\u7684\u7eb9\u7406\u5750\u6807\u5982\u4e0b\uff1a\n```js\n  const x = 0, y = 0, textWidth = 1.0, textHeight = 1.0;\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    x, y + textHeight,\n    x + textWidth, y + textHeight,\n    x, y,\n    x, y,\n    x + textWidth, y + textHeight,\n    x + textWidth, y\n  ]), gl.STATIC_DRAW);\n```\n\u5bf9\u5e94\u5173\u7cfb\u89c1\u4e0b\u56fe\u7eff\u8272\u6570\u5b57\uff0c\u56fe\u4e2d\u7eff\u8272\u6570\u5b57\u8868\u793a\u4f20\u8f93\u7ed9WebGL\u7684\u9876\u70b9\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\u7684\u987a\u5e8f\u3002\n\n![image](../../easy-webgl/coor_06.jpg)\n\n\u7ed8\u5236\u7ed3\u679c\u5982\u4e0b\uff1a\n\n![image](../../easy-webgl/coor_03.jpg)\n\n\u5982\u679c\u6211\u4eec\u53ea\u9700\u8981\u7528\u4e2d\u95f4\u56db\u4e2a\u50cf\u7d20\u586b\u5145\u77e9\u5f62\uff0c\u5373\u4e0b\u56fe\u7ea2\u6846\u4e2d\u56db\u4e2a\u50cf\u7d20\n\n![image](../../easy-webgl/coor_04.jpg)\n\n\u53ea\u9700\u8981\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\n\n```js\nconst x = 0.25, y = 0.25, textWidth = 0.5, textHeight = 0.5;\n// const x = 0, y = 0, textWidth = 1.0, textHeight = 1.0;\n```\n\n\u7ed8\u5236\u7ed3\u679c\u5982\u4e0b\n\n![image](../../easy-webgl/coor_05.jpg)\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```js\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    attribute vec2 a_texCoord;\n    attribute vec2 a_position;\n    varying vec2 v_texCoord;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(a_position, 0.0, 1.0);\n        // \u5c06\u7eb9\u7406\u5750\u6807\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\n        // GPU\u4f1a\u5728\u70b9\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\n        v_texCoord = a_texCoord;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    uniform sampler2D u_image;\n    // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\n    varying vec2 v_texCoord;\n    void main(){\n      // \u5728\u7eb9\u7406\u4e0a\u5bfb\u627e\u5bf9\u5e94\u989c\u8272\u503c\n      gl_FragColor = texture2D(u_image, v_texCoord);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n  const texCoordLocation = gl.getAttribLocation(program1, \"a_texCoord\");\n\n  // \u7ed9\u77e9\u5f62\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\n  const texCoordBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n  const x = 0.25, y = 0.25, textWidth = 0.5, textHeight = 0.5;\n  // const x = 0, y = 0, textWidth = 1.0, textHeight = 1.0;\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    x, y + textHeight,\n    x + textWidth, y + textHeight,\n    x, y,\n    x, y,\n    x + textWidth, y + textHeight,\n    x + textWidth, y\n  ]), gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(texCoordLocation);\n  gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n  const rectX = 0.0, rectY = 0.5, rectWidth = 0.5, rectHeight = 0.5\n  let verticesInfo = [\n    rectX, rectY,\n    rectX + rectWidth, rectY,\n    rectX, rectY - rectHeight,\n    rectX, rectY - rectHeight,\n    rectX + rectWidth, rectY,\n    rectX + rectWidth, rectY - rectHeight,\n  ]\n \n  verticesInfo = new Float32Array(verticesInfo);\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW);\n\n  gl.vertexAttribPointer(positionLocation1, 2, gl.FLOAT, false, 8, 0);\n\n  gl.enableVertexAttribArray(positionLocation1);\n\n  // \u521b\u5efa\u7eb9\u7406\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // \u7528 4x4 \u7684\u50cf\u7d20\u586b\u5145\u7eb9\u7406\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 4;\n  const height = 4;\n  const border = 0;\n  const format = gl.RGBA;\n  const type = gl.UNSIGNED_BYTE;\n  const data = new Uint8Array([\n    255, 0, 0, 255, // \u7ea2\n    0, 255, 0, 255, // \u7eff\n    0, 0, 255, 255, // \u84dd\n    255, 255, 0, 255, // \u9ec4\n\n    255, 0, 255, 255, // \u54c1\u7ea2\u8272\n    0, 255, 255, 255, // \u9752\u8272\n    105, 255, 105, 255,   // \u9752\u67e0\u7eff\n    0, 0, 0, 255, // \u9ed1\u8272\n\n\n    255, 165, 0, 255,    // \u6a59\u8272\n    75, 32, 132, 255,    // \u6df1\u7d2b\u8272\n    255, 218, 0, 255,    // \u91d1\u8272\n    124, 252, 0,  255,   // \u8367\u5149\u7eff\n\n    255, 20, 133, 255,      // \u73ca\u745a\u8272\n    255, 182, 193, 255,   // \u6de1\u7c89\u7ea2\n    138, 43, 238, 255,    // \u9b54\u6cd5\u84dd\n    255, 255, 255, 255,     // \u767d\u8272\n  ]);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    level,\n    internalFormat,\n    width,\n    height,\n    border,\n    format,\n    type,\n    data\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\n  gl.clearColor(0, 0, 0, 0)\n\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n}\n\nmain();\n```\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u901a\u8fc7demo\u6f14\u793a\u4e86\u6570\u636e\u7eb9\u7406\u662f\u5982\u4f55\u901a\u8fc7\u7eb9\u7406\u5750\u6807\u586b\u5145\u4e09\u7ef4\u7269\u4f53\u8868\u9762\u7684\u3002\n\n#### \u56fe\u50cf\u6570\u636e\u7eb9\u7406\n\u8fd9\u6b21\u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684`color.png`\u56fe\u7247\u586b\u5145\u77e9\u5f62\uff0c\u8fd9\u662f\u4e00\u5f204 * 4\u50cf\u7d20\u7684\u56fe\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u4f7f\u7528\u6570\u636e\u7eb9\u7406\u4e2d\u7684\u6570\u636e\u751f\u6210\uff0c\u53ef\u4ee5\u770b\u5230\u548c\u4e0a\u9762\u7684\u6570\u636e\u7eb9\u7406\u7684\u989c\u8272\u548c\u987a\u5e8f\u4e00\u81f4\u3002\n\n![image](../../easy-webgl/color.png)\n\n\n\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u5982\u679c\u56fe\u7247\u7eb9\u7406\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0c\u90a3\u4e48\u7ea2\u8272\u50cf\u7d20\u5c06\u4f4d\u4e8e\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2\uff0c\u767d\u8272\u50cf\u7d20\u5c06\u4f4d\u4e8e\u77e9\u5f62\u7684\u53f3\u4e0a\u89d2\n\n![image](../../easy-webgl/coor_08.jpg)\n\n\u6211\u4eec\u590d\u7528\u6570\u636e\u7eb9\u7406\u7684demo\u4ee3\u7801\uff0c\u5305\u62ec\u7eb9\u7406\u5750\u6807\u7b49\u6570\u636e\u3002\u5982\u4e0b\u6240\u793a\uff1a\n```js\nconst main = (image) => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    attribute vec2 a_texCoord;\n    attribute vec2 a_position;\n    varying vec2 v_texCoord;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(a_position, 0.0, 1.0);\n        // \u5c06\u7eb9\u7406\u5750\u6807\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\n        // GPU\u4f1a\u5728\u70b9\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\n        v_texCoord = a_texCoord;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    uniform sampler2D u_image;\n    // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\n    varying vec2 v_texCoord;\n    void main(){\n      // \u5728\u7eb9\u7406\u4e0a\u5bfb\u627e\u5bf9\u5e94\u989c\u8272\u503c\n      gl_FragColor = texture2D(u_image, v_texCoord);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n  const texCoordLocation = gl.getAttribLocation(program1, \"a_texCoord\");\n\n  // \u7ed9\u77e9\u5f62\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\n  const texCoordBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n  // const x = 0.25, y = 0.25, textWidth = 0.5, textHeight = 0.5;\n  const x = 0, y = 0, textWidth = 1.0, textHeight = 1.0;\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    x, y + textHeight,\n    x + textWidth, y + textHeight,\n    x, y,\n    x, y,\n    x + textWidth, y + textHeight,\n    x + textWidth, y\n  ]), gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(texCoordLocation);\n  gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n  const rectX = 0.0, rectY = 0.5, rectWidth = 0.5, rectHeight = 0.5\n  let verticesInfo = [\n    rectX, rectY,\n    rectX + rectWidth, rectY,\n    rectX, rectY - rectHeight,\n    rectX, rectY - rectHeight,\n    rectX + rectWidth, rectY,\n    rectX + rectWidth, rectY - rectHeight,\n  ]\n \n  verticesInfo = new Float32Array(verticesInfo);\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW);\n\n  gl.vertexAttribPointer(positionLocation1, 2, gl.FLOAT, false, 8, 0);\n\n  gl.enableVertexAttribArray(positionLocation1);\n\n  // \u521b\u5efa\u7eb9\u7406\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n   // \u5c06\u56fe\u50cf\u4e0a\u4f20\u5230\u7eb9\u7406\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\n  gl.clearColor(0, 0, 0, 0)\n\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n}\n\n// // \u56fe\u7247URL\nconst imageUrl = \"./color.png\"\n\nconst image = new Image();\nimage.src = imageUrl  \nimage.onload = function () {\n  main(image);\n}\n```\n\n\u7ed8\u5236\u7ed3\u679c\u5982\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ed8\u5236\u7684\u7ed3\u679c\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\uff01\n\n![image](../../easy-webgl/coor_09.jpg)\n\n\u8fd9\u6b21\u7684\u4ee3\u7801\u53ea\u662f\u5c06\u6570\u636e\u7eb9\u7406\u66f4\u6362\u6210\u56fe\u7247\u7eb9\u7406\uff0c\u5373\n```js\n    // \u7528 4x4 \u7684\u50cf\u7d20\u586b\u5145\u7eb9\u7406\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const width = 4;\n    const height = 4;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    const data = new Uint8Array([\n      255, 0, 0, 255, // \u7ea2\n      0, 255, 0, 255, // \u7eff\n      0, 0, 255, 255, // \u84dd\n      255, 255, 0, 255, // \u9ec4\n  \n      255, 0, 255, 255, // \u54c1\u7ea2\u8272\n      0, 255, 255, 255, // \u9752\u8272\n      105, 255, 105, 255,   // \u9752\u67e0\u7eff\n      0, 0, 0, 255, // \u9ed1\u8272\n  \n  \n      255, 165, 0, 255,    // \u6a59\u8272\n      75, 32, 132, 255,    // \u6df1\u7d2b\u8272\n      255, 218, 0, 255,    // \u91d1\u8272\n      124, 252, 0,  255,   // \u8367\u5149\u7eff\n  \n      255, 20, 133, 255,      // \u73ca\u745a\u8272\n      255, 182, 193, 255,   // \u6de1\u7c89\u7ea2\n      138, 43, 238, 255,    // \u9b54\u6cd5\u84dd\n      255, 255, 255, 255,     // \u767d\u8272\n    ]);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      width,\n      height,\n      border,\n      format,\n      type,\n      data\n    );\n```\n\n\u66ff\u6362\u6210\uff1a\n\n```js\n// \u5c06\u56fe\u50cf\u4e0a\u4f20\u5230\u7eb9\u7406\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n```\n\n\u6211\u4eec\u4f20\u9012\u7684\u7eb9\u7406\u5750\u6807\u548c\u9876\u70b9\u5750\u6807\u90fd\u4e00\u6837\uff0c\u4f46\u56fe\u7247\u7eb9\u7406\u6700\u7ec8\u7684\u7ed8\u5236\u7ed3\u679c\u5374\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\uff0c\u8fd9\u4e5f\u662f\u672c\u7bc7\u6587\u7ae0\u60f3\u63a2\u8ba8\u7684\u3002\n\n### \u4e3a\u4ec0\u4e48\u56fe\u7247\u7eb9\u7406\u7ed8\u5236\u7ed3\u679c\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\n\u5728\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4ee3\u7801\u8bfb\u53d6color.png\u8fd9\u5f20\u56fe\u7247\u7684rgba\u503c\u3002\n```js\nconst img = new Image();\nimg.src =  \"./color.png\";\n\nimg.onload = () => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.drawImage(img, 0, 0);\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const data = imageData.data;\n\n  console.log('rgba\uff1a', data)\n\n};\n```\n\n\u53ef\u4ee5\u770b\u5230\uff0ccolor.png\u4e2d\u7b2c\u4e00\u4e2a\u989c\u8272\u5757\uff08\u5373\u73ca\u745a\u8272\uff09\u4f4d\u4e8e\u50cf\u7d20\u6570\u7ec4\u7684\u5f00\u5934\n\n![image](../../easy-webgl/coor_10.jpg)\n\n\u6700\u540e\u4e00\u4e2a\u989c\u8272\u5757\uff08\u5373\u9ec4\u8272\uff09\u4f4d\u4e8e\u50cf\u7d20\u6570\u7ec4\u7684\u7ed3\u5c3e\n\n![image](../../easy-webgl/coor_11.jpg)\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u56fe\u7247\u8f6c\u6210\u7eb9\u7406\u50cf\u7d20\u6570\u636e\u65f6\uff0c\u6d4f\u89c8\u5668\u5e95\u5c42\u662f\u5148\u4ece\u56fe\u7247\u7684\u5de6\u4e0a\u89d2\u5f00\u59cb\u590d\u5236\u7b2c\u4e00\u4e2a\u50cf\u7d20\u70b9\uff0c\u76f4\u5230\u56fe\u7247\u7684\u53f3\u4e0b\u89d2\u3002\n\n\n\u56de\u5230\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528gl.texImage2D\u5c06`\u7eb9\u7406\u6570\u636e`\u4e0a\u4f20\u5230GPU\u3002WebGL\u7684texImage2D\u51fd\u6570\u662f\u5bf9OpenGL\u7684glTexImage2D\u51fd\u6570\u7684\u8f7b\u91cf\u7ea7\u5305\u88c5\u5668\u3002\u200b\u5728OpenGL\u4e2d\uff0cglTexImage2D\u51fd\u6570\u5e76\u4e0d\u63a5\u53d7HTMLImageElement\u7c7b\u578b\u7684\u6e90\u5bf9\u8c61\uff0c\u5b83\u4ec5\u63a5\u6536\u4e00\u4e2a const void* data\u7c7b\u578b\u7684\u6570\u636e\u6307\u9488\u3002\u8be5\u51fd\u6570\u671f\u671b\u4f20\u5165\u7684\u50cf\u7d20\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4ee5`\u200b\u81ea\u4e0b\u800c\u4e0a`\u7684\u987a\u5e8f\u5b58\u50a8\uff1a\u200b\u7b2c\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7eb9\u7406\u56fe\u50cf\u7684\u5de6\u4e0b\u89d2\uff1b\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5219\u5bf9\u5e94\u7eb9\u7406\u56fe\u50cf\u7684\u53f3\u4e0a\u89d2\u3002\n\n\u7136\u800c\uff0c[\u200bWebGL\u89c4\u8303](https://registry.khronos.org/webgl/specs/latest/1.0/#TEXIMAGE2D_HTML)\u5bf9 texImage2D \u51fd\u6570\u7684\u5b9a\u4e49\u5374\u6307\u51fa\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7eb9\u7406\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\u3002\n\n![image](../../easy-webgl/coor_12.jpg)\n\n\u8fd9\u610f\u5473\u7740\uff0c\u5c3d\u7ba1OpenGL\u671f\u671b\u50cf\u7d20\u6570\u636e`\u4ee5\u81ea\u4e0b\u800c\u4e0a`\u7684\u987a\u5e8f\u6392\u5217\uff0c\u4f46\u6d4f\u89c8\u5668\u5728\u5904\u7406 `<img>` \u5143\u7d20\u65f6\uff0c\u4ecd\u7136\u4f1a\u4ee5\u81ea\u4e0a\u800c\u4e0b\u7684\u987a\u5e8f\u590d\u5236\u50cf\u7d20\uff01\n\n\u8fd9\u5c31\u5bfc\u81f4\uff0c\u5982\u679c\u6211\u4eec\u5728WebGL\u4e2d\uff0c\u5728\u5904\u7406\u56fe\u7247\u7c7b\u578b\u7684\u7eb9\u7406\u65f6\uff0c\u5982\u679c\u8fd8\u662f\u6309\u7167\u7eb9\u7406\u5750\u6807\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\u4f20\u8f93\u7eb9\u7406\u5750\u6807\uff0c\u90a3\u4e48\u6700\u7ec8\u7ed8\u5236\u51fa\u6765\u7684\u56fe\u7247\u5c06\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\u3002\u5982\u679c\u5e0c\u671b\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6848\uff1a\n\n- 1.\u4f7f\u7528`gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);`\u7ffb\u8f6cY\u8f74\n- 2.\u5c06\u56fe\u7247\u5de6\u4e0a\u89d2\u4f5c\u4e3a\u539f\u70b9\u4f20\u8f93\u7eb9\u7406\u5750\u6807\n\n\u6211\u4eec\u91c7\u7528\u7b2c2\u79cd\u65b9\u6848\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5373\u5c06\u5de6\u4e0a\u89d2\u5f53\u4f5c\u539f\u70b9\u4f20\u8f93\u5750\u6807\uff1a\n\n![image](../../easy-webgl/coor_13.jpg)\n\n\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u5982\u4e0b\uff1a\n\n```js\nconst x = 0, y = 0, textWidth = 1.0, textHeight = 1.0;\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n  x, y,\n  x + textWidth, y,\n  x, y + textHeight,\n  x, y + textHeight,\n  x + textWidth, y,\n  x + textWidth, y + textHeight,\n]), gl.STATIC_DRAW);\n```\n\n\u53ef\u4ee5\u53d1\u73b0\u7ed8\u5236\u7684\u7ed3\u679c\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u3002\n\n\n### \u7ed3\u8bba\n\u5728OpenGL\u4e2d\uff0c\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0cglTexImage2D\u51fd\u6570\u671f\u671b\u4f20\u5165\u7684\u50cf\u7d20\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4ee5\u81ea\u4e0b\u800c\u4e0a\u7684\u987a\u5e8f\u5b58\u50a8\u3002\u800cWebGL\u7684texImage2D\u51fd\u6570\u53ea\u662f\u57fa\u4e8eglTexImage2D\u7684\u7b80\u5355\u5c01\u88c5\uff0c\u56e0\u6b64\u7406\u8bba\u4e0a\u4e5f\u662f\u671f\u671b\u4f20\u5165\u7684\u50cf\u7d20\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4ee5\u81ea\u4e0b\u800c\u4e0a\u7684\u987a\u5e8f\u5b58\u50a8\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5728WebGL\u4e2d\uff0c\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u4e5f\u662f\u5728\u5de6\u4e0b\u89d2\u3002\n\n\u4f46\u662f\u56fe\u7247\u7c7b\u578b\u7684\u7eb9\u7406\u6570\u636e\u6bd4\u8f83\u7279\u6b8a\uff0c\u7531\u4e8e\u5728\u6d4f\u89c8\u5668\u8bbe\u8ba1\u4e4b\u521d\uff0c\u590d\u5236\u56fe\u7247\u50cf\u7d20\u6570\u636e\u90fd\u662f\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4f20\u5165\u7ed9WebGL\u7684texImage2D\u51fd\u6570\u7684\u50cf\u7d20\u6570\u636e\u662f\u4ece\u4e0a\u5230\u4e0b\u5b58\u50a8\u7684\u3002\u5c31\u4f1a\u5bfc\u81f4\u7ed8\u5236\u7684\u7ed3\u679c\u662f\u4e0a\u4e0b\u98a0\u5012\u7684\u3002\n\n\u56e0\u6b64\uff0c\u5728WebGL\u4e2d\uff0c\u5173\u4e8e\u7eb9\u7406\u5750\u6807\u539f\u70b9\u9700\u8981\u5206\u4e24\u79cd\u573a\u666f\uff1a\n- \u56fe\u7247\u7c7b\u578b\u7684\u7eb9\u7406\u6570\u636e\uff0c\u7eb9\u7406\u5750\u6807\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\n- \u5176\u4ed6\u7c7b\u578b\u7684\u7eb9\u7406\u6570\u636e\uff0c\u7eb9\u7406\u5750\u6807\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\n\n\u5b9e\u9645\u4e0a\uff0c\u4e0a\u6216\u8005\u4e0b\u5728\u7eb9\u7406\u5750\u6807\u7a7a\u95f4\u4e2d\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6bd5\u7adf\u5e95\u5c42\u7684glTexImage2D\u6700\u7ec8\u63a5\u6536\u7684\u662f\u50cf\u7d20\u6570\u7ec4\uff0c\u7eb9\u7406\u5750\u6807(0,0)\u5bf9\u5e94\u6570\u636e\u7684\u5f00\u5934\uff0c(1,1)\u5bf9\u5e94\u6570\u636e\u7684\u7ed3\u5c3e\n\n\n### \u53c2\u8003\n- [why-is-my-webgl-texture-upside-down/](https://jameshfisher.com/2020/10/22/why-is-my-webgl-texture-upside-down/)\n\n- [webgl\u89c4\u8303](https://registry.khronos.org/webgl/specs/latest/1.0/#TEXIMAGE2D_HTML)\n\n- [WebGL\u4e09\u7ef4\u7eb9\u7406](https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-3d-textures.html)"})}}}]);
//# sourceMappingURL=A040.f8e33f66.chunk.js.map