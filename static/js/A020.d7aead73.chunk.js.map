{"version":3,"file":"static/js/A020.d7aead73.chunk.js","mappings":"yJAOE,QAJA,WACE,OAAOA,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,OAAQ,64FAC3B,C","sources":["dynamic/pages/属性和缓冲/size和属性默认值.jsx"],"sourcesContent":["import React from \"react\";\n  import MarkDown from \"@/components/markdown\";\n  \n  function Index() {\n    return <MarkDown srcDoc={\"## 前言\\n本篇文章主要演示vertexAttribPointer传递的size小于顶点着色器中定义的attribute属性的组成数量时，顶点着色器如何取值。比如顶点着色器中声明attribute vec4 a_position;具有4个分量，但是vertexAttribPointer\\n的size却为1，此时a_position属性应该如何读取值\\n\\n```js\\nimport initShaders from \\\"./initShaders.js\\\";\\n\\nconst main = () => {\\n  const canvas = document.getElementById('webgl')\\n  const gl = canvas.getContext('webgl2')\\n  const vertexShaderSource1 = `\\n    attribute vec4 a_position;\\n    void main(){\\n        gl_PointSize = 10.0;\\n        gl_Position = vec4(a_position);\\n    }\\n  `\\n  const fragmentShaderSource1 = `\\n    precision mediump float;\\n    void main(){\\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n    }\\n  `\\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\\n\\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\\n\\n  let positions = [\\n    -0.5,\\n    0.5,\\n    0.0, \\n  ]\\n  positions = new Float32Array(positions)\\n\\n\\n\\n  const positionBuffer = gl.createBuffer();\\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\\n  gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW)\\n\\n  // 设置属性positionLocation1的一系列状态，告诉它应该怎么从缓冲中读取数据\\n  // 定义点的信息\\n  gl.vertexAttribPointer(\\n    positionLocation1,\\n    1, \\n    gl.FLOAT,\\n    false,\\n    4, \\n    0\\n  );\\n \\n\\n\\n  gl.clearColor(0, 0, 0, 0)\\n  gl.clear(gl.COLOR_BUFFER_BIT);\\n\\n  gl.useProgram(program1)\\n  // 先修改属性的默认值。但需要注意的是，\\n  // 即使修改了默认值，在 WebGL 读取缓冲时，\\n  // 默认值还是会按照 vec4(0.0, 0.0, 0.0, 1.0) 读取。\\n  gl.vertexAttrib4f(positionLocation1, 0.5, 0.5, 0.5, 1.0);\\n  gl.drawArrays(gl.POINTS, 0, 1)\\n\\n  // 然后再使用缓冲，注意，这里缓冲只提供了一个数据，剩下三个数据需要默认从vec4(0,0,0,1.0)中读取后面三个\\n  // 而不是从属性修改后的默认值读取，比如上面修改后的属性默认值为vec4(0.5,0.5,0.5,1.0)\\n  gl.enableVertexAttribArray(positionLocation1);\\n\\n  // 告诉webgl绘制3个点\\n  gl.drawArrays(gl.POINTS, 0, 3)\\n\\n}\\n\\nmain();\\n```\"} />;\n  }\n  \n  export default Index;"],"names":["_jsx","MarkDown","srcDoc"],"sourceRoot":""}