{"version":3,"file":"static/js/A000.2556621e.chunk.js","mappings":"sNAkCA,GA9BoBA,EAAAA,EAAAA,OAAKC,IAAuC,IAAtC,SAAEC,EAAQ,SAAEC,GAAoBF,EAAPG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GACtD,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAajC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcR,SAAA,EAC3BS,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAOE,QAASA,IAdtBC,KACZ,MAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGG,MAAQJ,EACXE,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAC1BP,GAAQ,GACRgB,YAAW,KACThB,GAAQ,EAAM,GACb,IAAK,EAIgCiB,CAAKC,OAAOvB,IAAWA,SAC1DI,EAAO,iCAAU,kBAEpBK,EAAAA,EAAAA,KAACe,EAAAA,GAAiBC,EAAAA,EAAAA,GAAA,CAChBzB,SAAUuB,OAAOvB,GAAU0B,QAAQ,MAAO,IAC1C3B,SAAUA,EACVS,UAAU,UACVmB,OAAO,OACH1B,MAEF,I,uECsBV,QA1CA,SAAeH,GAAmB,IAAlB,IAAE8B,EAAG,OAAEC,GAAQ/B,EAC7B,MAAOgC,EAAQC,IAAazB,EAAAA,EAAAA,UAAS,IAYrC,OAXA0B,EAAAA,EAAAA,YAAU,KACJH,EACFE,EAAUF,GAGZI,MAAML,GACHM,MAAMC,GAAaA,EAASxB,SAC5BuB,MAAMvB,IACLoB,EAAUpB,EAAK,GACf,GACH,CAACiB,EAAKC,KAEPpB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeR,UAC5BS,EAAAA,EAAAA,KAAC2B,EAAAA,EAAa,CACZpC,SAAU8B,EACVO,cAAe,CAACC,EAAAA,GAChBC,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,IAAAA,CAAIC,GAAmD,IAAlD,KAAEC,EAAI,OAAEC,EAAM,UAAErC,EAAS,SAAER,GAAoB2C,EAAP1C,GAAKC,EAAAA,EAAAA,GAAAyC,EAAAxC,GAChD,MAAM2C,EAAQ,iBAAiBC,KAAKvC,GAAa,IACjD,OAAQqC,GAAUC,GAChBrC,EAAAA,EAAAA,KAACe,GAAiBC,EAAAA,EAAAA,GAAA,CAChBzB,SAAUuB,OAAOvB,GAAU0B,QAAQ,MAAO,IAC1C3B,SAAU+C,EAAM,GAChBtC,UAAU,UACVmB,OAAO,OACH1B,KAGNQ,EAAAA,EAAAA,KAAA,QAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAMjB,UAAWA,GAAeP,GAAK,IAAAD,SAClCA,IAGP,MAKV,C,6EC3CE,QAJA,WACE,OAAOS,EAAAA,EAAAA,KAACuC,EAAAA,EAAQ,CAACnB,OAAQ,yDAC3B,C","sources":["components/markdown/highLighter.jsx","components/markdown/index.jsx","dynamic/pages/基础知识/test.jsx"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport \"./index.less\";\n\nconst Highlighter = memo(({ language, children, ...props }) => {\n  const [show, setShow] = useState(false);\n  const copy = (text) => {\n    const el = document.createElement(\"textarea\");\n    el.value = text;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    setShow(true);\n    setTimeout(() => {\n      setShow(false);\n    }, 1000);\n  };\n  return (\n    <div className=\"high-lighter\">\n      <span className=\"copy\" onClick={() => copy(String(children))}>\n        {show ? \"复制成功！\" : \"复制\"}\n      </span>\n      <SyntaxHighlighter\n        children={String(children).replace(/\\n$/, \"\")}\n        language={language}\n        className=\"my-code\"\n        PreTag=\"div\"\n        {...props}\n      />\n    </div>\n  );\n});\n\nexport default Highlighter;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport SyntaxHighlighter from \"./highLighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport \"./index.less\";\n\nfunction Shapes({ src, srcDoc }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    if (srcDoc) {\n      setMdText(srcDoc)\n      return;\n    }\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src, srcDoc]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import React from \"react\";\n  import MarkDown from \"@/components/markdown\";\n  \n  function Index() {\n    return <MarkDown srcDoc={\"## hello world\\n![image](../../easy-webgl/img_01.jpg)\"} />;\n  }\n  \n  export default Index;"],"names":["memo","_ref","language","children","props","_objectWithoutProperties","_excluded","show","setShow","useState","_jsxs","className","_jsx","onClick","text","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout","copy","String","SyntaxHighlighter","_objectSpread","replace","PreTag","src","srcDoc","mdText","setMdText","useEffect","fetch","then","response","ReactMarkdown","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","_ref2","node","inline","match","exec","MarkDown"],"sourceRoot":""}