"use strict";(self.webpackChunkWebGL=self.webpackChunkWebGL||[]).push([[678],{3477:(n,e,t)=>{t.r(e),t.d(e,{default:()=>a});t(5043);var r=t(8044),g=t(579);const a=function(){return(0,g.jsx)(r.A,{srcDoc:"## \u7eb9\u7406\u5750\u6807\n\n\u7eb9\u7406\u662f\u901a\u8fc7\u201c\u7eb9\u7406\u5750\u6807\u201d\u6765\u5f15\u7528\u7684\uff0c \u7eb9\u7406\u5750\u6807 0.0 \u5230 1.0 \u5bf9\u5e94\u7eb9\u7406\u4ece\u5de6\u5230\u53f3\uff0c0.0 \u5230 1.0 \u5bf9\u5e94\u7b2c\u4e00\u4e2a\u50cf\u7d20\u6240\u5728\u884c\u5230\u6700\u540e\u4e00\u884c\u3002\u7eb9\u7406\u5750\u6807\u662f\u6ca1\u6709\u4e0a\u4e0b\u7684\u6982\u5ff5\u7684\uff0c\u4e3b\u8981\u662f\u4f9d\u636e\u4f20\u9012\u7ed9WebGL\u7684\u7eb9\u7406\u6570\u636e\uff0c\u7eb9\u7406\u6570\u636e\u7684\u5f00\u5934\u5bf9\u5e94\u7eb9\u7406\u5750\u6807(0, 0)\uff0c \u7ed3\u5c3e\u5bf9\u5e94\u7eb9\u7406\u5750\u6807(1, 1)\u3002\n\n## \u7eb9\u7406\u5750\u6807\u539f\u70b9\n\u5728\u793e\u533a\u5927\u90e8\u5206\u6587\u7ae0\u4e2d\uff0c\u90fd\u666e\u904d\u8ba4\u4e3aWebGL\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\u3002\u6bd4\u5982\u5728[webglfundamentals](https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-3d-textures.html)\u4e00\u6587\u4e2d\uff0c\u4e5f\u8ba4\u4e3aWebGL\u7eb9\u7406\u5750\u6807\u5728\u5de6\u4e0b\u89d2\uff1a\n\n![image](../../easy-webgl/texture_01.jpg)\n\n\u5b9e\u9645\u4e0a\uff0c\u5728OpenGL\u4e2d\uff0c\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u786e\u5b9e\u5728\u5de6\u4e0b\u89d2\u3002\u800c\u5728WebGL\u4e2d\uff0c\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\uff01\uff01\u4e0b\u9762\u6211\u4eec\u5c06\u901a\u8fc7\u4f8b\u5b50\u9a8c\u8bc1\n\n\n\u4e0b\u56fe\u4e2d\uff0c\u7070\u8272\u80cc\u666f\u533a\u57df\u662fCanvas\u753b\u5e03\uff0c\u6211\u4eec\u5728(0,0)\uff0c(0, 0.5), (0.5,0.5), (0.5, 0)\u5904\u753b\u4e00\u4e2a\u77e9\u5f62\u3002\n\n![image](../../easy-webgl/texture_02.png)\n\n\u5bf9\u5e94\u7684\u77e9\u5f62\u5750\u6807\u4e3a\uff1a\n\n```js\nconst rectX = 0.5, rectY =  0.5;\nlet verticesInfo = [\n    0.0, rectY,\n    rectX, rectY,\n    0, 0,\n    rectX, rectY,\n    0, 0,\n    rectX, 0,\n]\nverticesInfo = new Float32Array(verticesInfo)\n```\n\n\u77e9\u5f62\u7684\u5750\u6807\u987a\u5e8f\u9700\u8981\u548c\u7eb9\u7406\u8d34\u56fe\u7684\u5750\u6807\u987a\u5e8f\u4e00\u4e00\u5bf9\u5e94\u3002\u4e0a\u56fe\u4e2d\uff0c\u7eff\u8272\u5b57\u4f53\u76841\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\u5c31\u662f\u77e9\u5f62\u7684\u5750\u6807\u987a\u5e8f\u3002\n\n\u5047\u8bbeWebGL\u4e2d\u7eb9\u7406\u8d34\u56fe\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0c\u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u56fe\u7247\u8d34\u5230\u4e0a\u9762\u7684\u77e9\u5f62\u4e2d\n\n![image](../../easy-webgl/f.png)\n\n\u90a3\u4e48\u7eb9\u7406\u5750\u6807\u548c\u77e9\u5f62\u7684\u5750\u6807\u5bf9\u5e94\u5173\u7cfb\u5c31\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7eff\u8272\u5b57\u4f53\u5c31\u662f\u8868\u793a\u5750\u6807\u5728\u7f13\u51b2\u4e2d\u7684\u987a\u5e8f\u3002\n\n![image](../../easy-webgl/texture_03.png)\n\n\u56e0\u6b64\uff0c\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u5e94\u8be5\u5982\u4e0b\uff1a\n\n```js\nconst x = 1.0, y = 1.0;\n// \u5047\u8bbeWebGL\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0c\u90a3\u4e48\u7eb9\u7406\u5750\u6807\u5e94\u8be5\u5982\u4e0b\uff1a\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    0.0, y,\n    x, y,\n    0.0, 0.0,\n    x, y,\n    0.0,0.0,\n    x, 0\n]), gl.STATIC_DRAW);\n```\n\n\u5b9e\u9645\u7ed8\u5236\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u8d34\u56fe\u662f\u98a0\u5012\u7684\uff01\uff01\n\n![image](../../easy-webgl/texture_04.jpg)\n\n\u5b8c\u6574demo\u5982\u4e0b\uff1a\n```js\nconst main = (image) => {\n    const canvas = document.getElementById('webgl')\n    const gl = canvas.getContext('webgl')\n    const vertexShaderSource1 = `\n      attribute vec2 a_texCoord;\n      attribute vec2 a_position;\n      varying vec2 v_texCoord;\n      void main(){\n          gl_PointSize = 10.0;\n          gl_Position = vec4(a_position, 0.0, 1.0);\n          // \u5c06\u7eb9\u7406\u5750\u6807\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\n          // GPU\u4f1a\u5728\u70b9\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\n          v_texCoord = a_texCoord;\n      }\n    `\n    const fragmentShaderSource1 = `\n      precision mediump float;\n      uniform sampler2D u_image;\n      // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\n      varying vec2 v_texCoord;\n      void main(){\n        // \u5728\u7eb9\u7406\u4e0a\u5bfb\u627e\u5bf9\u5e94\u989c\u8272\u503c\n        gl_FragColor = texture2D(u_image, v_texCoord);\n      }\n    `\n    const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n    const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n    const texCoordLocation = gl.getAttribLocation(program1, \"a_texCoord\");\n  \n    // \u7ed9\u77e9\u5f62\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    const x = 1.0, y = 1.0;\n    // \u5047\u8bbeWebGL\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0c\u90a3\u4e48\u7eb9\u7406\u5750\u6807\u5e94\u8be5\u5982\u4e0b\uff1a\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n     0.0, y,\n     x, y,\n     0.0, 0.0,\n     x, y,\n     0.0,0.0,\n     x, 0\n    ]), gl.STATIC_DRAW);\n\n    // WebGL\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u6309\u4e0b\u9762\u7684\u987a\u5e8f\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\uff1a\n    // gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    //   0.0, 0.0,\n    //   x, 0.0,\n    //   0.0, y,\n    //   x, 0.0,\n    //   0.0, y,\n    //   x, y\n    // ]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n  \n    // \u521b\u5efa\u7eb9\u7406\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n  \n    // \u8bbe\u7f6e\u53c2\u6570\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u4efb\u4f55\u5c3a\u5bf8\u7684\u56fe\u50cf\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  \n    // \u5c06\u56fe\u50cf\u4e0a\u4f20\u5230\u7eb9\u7406\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  \n    const rectX = 0.5, rectY =  0.5;\n    let verticesInfo = [\n      0.0, rectY,\n      rectX, rectY,\n      0, 0,\n      rectX, rectY,\n      0, 0,\n      rectX, 0,\n    ]\n    verticesInfo = new Float32Array(verticesInfo)\n  \n    const vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW)\n  \n  \n    gl.vertexAttribPointer(\n      positionLocation1,\n      2,\n      gl.FLOAT,\n      false,\n      8,\n      0\n    );\n  \n  \n  \n    gl.clearColor(0, 0, 0, 0.1)\n  \n    gl.clear(gl.COLOR_BUFFER_BIT);\n  \n    gl.useProgram(program1)\n  \n    gl.enableVertexAttribArray(positionLocation1);\n  \n    gl.drawArrays(gl.TRIANGLES, 0,6)\n  \n  }\n  \n  \n  const image = new Image();\n  image.src = \"./f.png\";  // \u5fc5\u987b\u5728\u540c\u4e00\u57df\u540d\u4e0b\n  image.onload = function () {\n    main(image);\n  }\n```\n\n\u5b9e\u9645\u4e0a\uff0cWebGL\u7eb9\u7406\u7684\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![image](../../easy-webgl/texture_05.png)\n\n\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u8fd9\u6837\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\uff1a\n\n```js\nconst x = 1.0, y = 1.0;\n// WebGL\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u6309\u4e0b\u9762\u7684\u987a\u5e8f\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\uff1a\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    0.0, 0.0,\n    x, 0.0,\n    0.0, y,\n    x, 0.0,\n    0.0, y,\n    x, y\n]), gl.STATIC_DRAW);\n```\n\n\u5b9e\u9645\u7684\u7ed8\u5236\u7ed3\u679c\u5982\u4e0b\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u662f\u6b63\u786e\u7684\n\n![image](../../easy-webgl/texture_06.jpg)\n\n## \u7ed3\u8bba\n\u5728OpenGL\u4e2d\uff0c\u7eb9\u7406\u8d34\u56fe\u7684\u539f\u70b9\u5728\u5de6\u4e0b\u89d2\u3002\u800c\u5728WebGL\u4e2d\uff0c\u7eb9\u7406\u8d34\u56fe\u7684\u539f\u70b9\u5b9e\u9645\u4e0a\u5728\u5de6\u4e0a\u89d2\u3002\u5982\u679c\u5728WebGL\u4e2d\u5c06\u5de6\u4e0b\u89d2\u5f53\u4f5c\u7eb9\u7406\u8d34\u56fe\u7684\u539f\u70b9\u5e76\u63d0\u4f9b\u7eb9\u7406\u5750\u6807\uff0c\u9700\u8981\u8bbe\u7f6egl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n## \u53c2\u8003\n- [\u4e09\u7ef4\u7eb9\u7406](https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-3d-textures.html)\n- [\u4e3a\u4ec0\u4e48WebGL\u7eb9\u7406\u662f\u98a0\u5012\u7684](https://jameshfisher.com/2020/10/22/why-is-my-webgl-texture-upside-down/)\n\n"})}}}]);
//# sourceMappingURL=A011.d6556a0e.chunk.js.map