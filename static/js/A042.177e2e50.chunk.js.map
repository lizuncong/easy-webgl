{"version":3,"file":"static/js/A042.177e2e50.chunk.js","mappings":"0JAOE,QAJA,WACE,OAAOA,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,OAAQ,irGAC3B,C","sources":["dynamic/pages/纹理/纹理单元及底层表示.jsx"],"sourcesContent":["import React from \"react\";\n  import MarkDown from \"@/components/markdown\";\n  \n  function Index() {\n    return <MarkDown srcDoc={\"## 纹理单元及其底层表示\\n\\n### 纹理的使用\\n\\n```js\\nconst main = (image) => {\\n  // ...\\n  // 顶点着色器\\n  // ...\\n  const fragmentShaderSource1 = `\\n      precision mediump float;\\n      uniform sampler2D u_image;\\n      // 从顶点着色器传入的纹理坐标\\n      varying vec2 v_texCoord;\\n      void main(){\\n        // 在纹理上寻找对应颜色值\\n        gl_FragColor = texture2D(u_image, v_texCoord);\\n      }\\n    `;\\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1);\\n\\n  // ...\\n  // 纹理坐标及顶点坐标\\n  // ...\\n\\n  // 创建纹理\\n  var texture = gl.createTexture();\\n  gl.bindTexture(gl.TEXTURE_2D, texture);\\n  // 将图像上传到纹理\\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\\n\\n  // ...\\n  // 绘制\\n  // ...\\n};\\n```\\n\\n## 纹理单元的底层表示\\n\\n```js\\nvar getContext = function () {\\n  var textureUnits = [\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n    { TEXTURE_2D: null, TEXTURE_CUBE_MAP: null },\\n  ];\\n  var activeTextureUnit = 0;\\n\\n  var activeTexture = function (unit) {\\n    // 将纹理单元枚举转换成索引\\n    var index = unit - gl.TEXTURE0;\\n    // 设置激活纹理单元\\n    activeTextureUnit = index;\\n  };\\n\\n  var bindTexture = function (target, texture) {\\n    // 设置激活纹理单元的目标对象纹理\\n    textureUnits[activeTextureUnit][target] = texture;\\n  };\\n\\n  var texImage2D = function (\\n    target,\\n    level,\\n    internalFormat,\\n    width,\\n    height,\\n    border,\\n    format,\\n    type,\\n    data\\n  ) {\\n    // 绑定对应纹理单元调用相应的方法\\n    var texture = textureUnits[activeTextureUnit][target];\\n    texture.mips[level] = convertDataToInternalFormat(\\n      internalFormat,\\n      width,\\n      height,\\n      format,\\n      type,\\n      data\\n    );\\n  };\\n  var texParameteri = function (target, pname, value) {\\n    var texture = textureUnits[activeTextureUnit][target];\\n    texture[pname] = value;\\n  };\\n  // 返回 WebGL API\\n  return {\\n    activeTexture: activeTexture,\\n    bindTexture: bindTexture,\\n    texImage2D: texImage2D,\\n    texParameteri: texParameteri\\n  };\\n};\\n```\\n\"} />;\n  }\n  \n  export default Index;"],"names":["_jsx","MarkDown","srcDoc"],"sourceRoot":""}