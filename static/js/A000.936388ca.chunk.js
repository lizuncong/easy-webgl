"use strict";(self.webpackChunkWebGL=self.webpackChunkWebGL||[]).push([[828],{5513:(n,o,e)=>{e.r(o),e.d(o,{default:()=>i});e(5043);var r=e(8044),t=e(579);const i=function(){return(0,t.jsx)(r.A,{srcDoc:"## \u524d\u8a00\n\nuniform\u5168\u5c40\u53d8\u91cf\u5728\u7740\u8272\u7a0b\u5e8f\u8fd0\u884c\u524d\u8d4b\u503c\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5168\u5c40\u6709\u6548\u3002\u5728\u4e00\u6b21\u7ed8\u5236\u4e2d\u5bf9\u6240\u6709\u9876\u70b9\u4fdd\u6301\u4e00\u81f4\u503c\u3002\u672c\u7bc7\u6587\u7ae0\u8be6\u89e3uniform\u5168\u5c40\u53d8\u91cf\uff0c\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n- uniform\u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\n- uniform\u53d8\u91cf\u6ce8\u610f\u4e8b\u9879\n  + \u5fc5\u987b\u5728\u8c03\u7528gl.useProgram\u4e4b\u540e\n  + \u5fc5\u987b\u548c\u58f0\u660e\u7684\u53d8\u91cf\u957f\u5ea6\u4e00\u81f4\n  + \u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e0d\u80fd\u5b9a\u4e49\u76f8\u540c\u540d\u5b57\u7684uniform\u53d8\u91cf\n- \u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7740\u8272\u7a0b\u5e8f\n\n## \u9ed8\u8ba4\u503c\n\n\u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7740\u8272\u7a0b\u5e8f\uff08\u6ce8\u610f\u8fd9\u53e5\u8bdd\uff0c\u540e\u9762\u4f1a\u8be6\u89e3\uff09\u3002\u5f53\u6211\u4eec\u8c03\u7528gl.linkProgram()\u5c06\u7f16\u8bd1\u8fc7\u7684\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u94fe\u63a5\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u540e\uff0c\u7740\u8272\u7a0b\u5e8f\u7684\u5168\u5c40\u53d8\u91cf\u90fd\u88ab\u521d\u59cb\u5316\u4e3a0\u3002\n\n![image](../../easy-webgl/uniform_01.webp)\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u9a8c\u8bc1\uff1a\n\n```js\nimport initShaders from \"./initShaders.js\";\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n\n  \n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n  // \u544a\u8bc9webgl\u7ed8\u52361\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n}\n\nmain();\n\n\n```\n\n\u7ed3\u679c\u5982\u4e0b\uff0c\u6211\u4eec\u6ca1\u6709\u663e\u793a\u7ed9offsetLoc\u8bbe\u7f6e\u503c\uff0c\u4f46\u662fwebgl\u4f9d\u7136\u6b63\u5e38\u7ed8\u5236\uff0c\u540c\u65f6\u9876\u70b9\u5e76\u6ca1\u6709\u53d1\u751f\u504f\u79fb\u3002\n\n![image](../../easy-webgl/uniform_02.webp)\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528`gl.uniform[1234][fi][v]()`\u65b9\u6cd5\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u7684\u503c\u3002\n\n```js\nimport initShaders from \"./initShaders.js\";\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n  gl.uniform4f(offsetLoc, 0.5, 0.5, 0.0, 0.0)\n\n  // \u5728(0.5, 0.5)\u4f4d\u7f6e\u5904\u7ed8\u5236\u4e00\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n\n}\n\nmain();\n```\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u5c06offset\u8bbe\u7f6e\u6210(0.5, 0.5, 0.0, 0.0)\uff0c\u610f\u5473\u7740\u9876\u70b9\u5c06\u5411\u53f3\u548c\u4e0a\u504f\u79fb0.5\uff0c\u5373\uff1a\n\n![image](../../easy-webgl/uniform_03.webp)\n\n\noffset\u7684\u503c(0.5, 0.5, 0.0, 0.0)\u5c06\u4f1a\u4e00\u76f4\u4fdd\u7559\uff0c\u9664\u975e\u53c8\u8c03\u7528gl.uniform\u65b9\u6cd5\u4fee\u6539\uff0c\u6216\u8005\u8c03\u7528gl.linkProgram\u91cd\u65b0\u94fe\u63a5\u7740\u8272\u7a0b\u5e8f\uff0c\u6bd4\u5982\uff1a\n\n```js\nimport initShaders from \"./initShaders.js\";\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n\n  \n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n  // \u4fee\u6539\u4e86\u5168\u5c40\u53d8\u91cfoffset\u7684\u503c\uff0c\u9876\u70b9\u5c06\u5411\u53f3\u548c\u4e0a\u504f\u79fb0.5\n  gl.uniform4f(offsetLoc, 0.5, 0.5, 0.0, 0.0)\n\n  // \u5148\u5728(0.5, 0.5)\u4f4d\u7f6e\u5904\u7ed8\u5236\u4e00\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n\n  // \u91cd\u65b0link\u540e\uff0c\u518d\u6b21\u5c06program1\u7a0b\u5e8f\u7684\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u4e3a 0 \u65f6\n  gl.linkProgram(program1);\n\n  // \u7136\u540e\u518d\u7ed8\u5236\u4e00\u4e2a\u70b9\uff0c\u6b64\u65f6\u7684\u5168\u5c40\u53d8\u91cfoffset\u521d\u59cb\u5316\u4e3a0\uff0c\u6240\u4ee5\u9876\u70b9\u4e0d\u4f1a\u53d1\u751f\u504f\u79fb\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n}\n\nmain();\n\n```\n\n\u8fd9\u91cc\u6211\u4eec\u5148\u8c03\u7528gl.uniform4f\u4fee\u6539\u5168\u5c40\u53d8\u91cfoffset\u7684\u503c\uff0c\u7136\u540e\u8c03\u7528gl.drawArrays\u7ed8\u5236\u3002\u63a5\u7740\u8c03\u7528gl.linkProgram\u91cd\u65b0\u8fde\u63a5\u7740\u8272\u7a0b\u5e8f\uff0c\u7740\u8272\u7a0b\u5e8f\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\u53c8\u4f1a\u88ab\u521d\u59cb\u5316\u62100\uff0c\u5305\u62ecoffset\u53d8\u91cf\u3002\u6700\u7ec8\u7684\u7ed8\u5236\u7ed3\u679c\u5982\u4e0b\uff1a\n\n![image](../../easy-webgl/uniform_04.webp)\n\n## \u4fee\u6539uniform\u503c\u6ce8\u610f\u4e8b\u9879\n\n### \u5fc5\u987b\u5728\u8c03\u7528gl.useProgram\u4e4b\u540e\n\n\u7531\u4e8euniform\u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5728\u8c03\u7528`gl.uniform[1234][fi][v]()`\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u5148\u786e\u4fdd\u8c03\u7528gl.useProgram\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684\u7740\u8272\u7a0b\u5e8f\u3002\n\nwebgl\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u7c7b\u4f3c`CURRENT_PROGRAM`\uff0c\u5f53\u6211\u4eec\u8c03\u7528gl.drawArrays\uff0cgl.drawElements\u4ee5\u53cagl.uniformxxx\u65b9\u6cd5\u65f6\uff0c\u4f7f\u7528\u7684\u90fd\u662fCURRENT\\_PROGRAM\u6240\u6307\u5411\u7684\u7a0b\u5e8f\u3002\n\n![image](../../easy-webgl/uniform_05.webp)\n\n\u53ef\u4ee5\u5c06gl.useProgram\u7528javascript\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```js\n// \u4f2a\u4ee3\u7801\uff1a\ngl.useProgram = (program) => {\n    gl.CURRENT_PROGRAM = program\n}\n```\n\n\u56e0\u6b64\uff0c\u6267\u884c\u5b8cgl.useProgram\u65f6\uff0cwebgl\u5185\u90e8\u72b6\u6001\u5982\u4e0b\uff1a\n\n![image](../../easy-webgl/uniform_06.webp)\n\n\u53ef\u4ee5\u5c06gl.uniform4f\u7528javascript\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```js\ngl.uniform4f = (location, v1, v2, v3, v4) => {\n    gl.CURRENT_PROGRAM.uniform.[location] = vec4(v1, v2, v3, v4)\n}\n```\n\n\u56e0\u6b64\uff0c\u8c03\u7528gl.uniformXXX\u524d\uff0c\u8bf7\u786e\u4fdd\u5148\u8c03\u7528gl.useProgram\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684\u7740\u8272\u7a0b\u5e8f\n\n### \u5fc5\u987b\u548c\u58f0\u660e\u7684\u53d8\u91cf\u957f\u5ea6\u4e00\u81f4\n\n\u8c03\u7528gl.uniformXXX\u65b9\u6cd5\u65f6\uff0c\u53c2\u6570\u7684\u957f\u5ea6\u5fc5\u987b\u548c\u58f0\u660e\u53d8\u91cf\u65f6\u7684\u5206\u91cf\u957f\u5ea6\u4e00\u81f4\u3002\u6bd4\u5982\u6211\u4eec\u58f0\u660e`uniform vec4 u_offset`\uff0coffset\u662f4\u4e2a\u5206\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u8c03\u7528`gl.uniform4f[v]`\u4fee\u6539\u53d8\u91cf\u7684\u503c\uff0c\u9700\u8981\u4e25\u683c\u4e00\u81f4\u3002\n\n```js\nimport initShaders from \"./initShaders.js\";\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n\n  \n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n  // offset\u9884\u671f\u7684\u662f4\u4e2a\u5206\u91cf\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u4f1a\u62a5\u9519\n  gl.uniform3f(offsetLoc, 0.5, 0.5, 0.0)\n\n  \n  gl.drawArrays(gl.POINTS, 0, 1)\n\n}\n\nmain();\n\n```\n\n\u63a7\u5236\u53f0\u62a5\u9519\uff0c\u7ed8\u5236\u7684\u9876\u70b9\u4f4d\u7f6e\u51fa\u9519\uff0c\u6ca1\u6709\u5728\u9884\u671f\u7684(0.5,0.5)\u4f4d\u7f6e\u7ed8\u5236\n\n![image](../../easy-webgl/uniform_07.webp)\n\n### \u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e0d\u80fd\u5b9a\u4e49\u540c\u540d\u7684uniform\u53d8\u91cf\n\n\u7531\u4e8euniform\u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7740\u8272\u7a0b\u5e8f\uff0c\u56e0\u6b64\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e0d\u80fd\u5b9a\u4e49\u540c\u540d\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u957f\u5ea6\u4e0d\u540c\u4e5f\u4e0d\u884c\uff0c\u6bd4\u5982vec3 u\\_offset\u548cvec4 u\\_offset\u4f1a\u51b2\u7a81\u3002\n\n```js\nimport initShaders from \"./initShaders.js\";\n\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    attribute vec3 a_position;\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(a_position, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    uniform vec4 u_offset;\n    void main(){\n        gl_FragColor = vec4(0.1, 0.0, 0.0, 0.1) + u_offset;\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n\n  console.log('offsetLoc...', offsetLoc)\n\n  let verticesInfo = [\n    0.5, 0.0,\n    0.0, 0.5,\n    -0.5, 0.0\n  ]\n  verticesInfo = new Float32Array(verticesInfo)\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n  gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW)\n\n\n  gl.vertexAttribPointer(\n    positionLocation1,\n    2,\n    gl.FLOAT,\n    false,\n    8,\n    0\n  );\n\n\n\n  gl.enableVertexAttribArray(positionLocation1);\n\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n  // \u7531\u4e8e\u58f0\u660eu_offset\u7684\u662fvec4\uff0c\u9700\u89814\u4e2a\u5206\u91cf\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u4ee3\u7801\u8c03\u7528gl.uniform3f\u4f1a\u62a5\u9519\u3002\n  // gl.uniform3f(offsetLoc, 0.3, 0.3, 0.3)\n  gl.uniform4f(offsetLoc, 0.3, 0.3, 0.3, 0.0)\n\n  // \u544a\u8bc9webgl\u7ed8\u52363\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 3)\n\n}\n\nmain();\n\n```\n\n\u7ed3\u679c\u5982\u4e0b\uff1a\n\n![image](../../easy-webgl/uniform_08.webp)\n\n\u56e0\u6b64\u9700\u8981\u907f\u514d\u5728\u540c\u4e2a\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u540c\u540d\u7684\u53d8\u91cf\u3002\u5982\u679c\u4e00\u5b9a\u8981\u7528\uff0c\u53ef\u4ee5\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684\u7cbe\u5ea6\u8bbe\u7f6e\u6210\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e00\u6837\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u6dfb\u52a0precision mediump float;\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff1a\n\n```js\nimport initShaders from \"./initShaders.js\";\n\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    precision mediump float;\n    attribute vec3 a_position;\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(a_position, 0.1) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    uniform vec4 u_offset;\n    void main(){\n        gl_FragColor = vec4(0.1, 0.0, 0.0, 0.1) + u_offset;\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n\n  console.log('offsetLoc...', offsetLoc)\n\n  let verticesInfo = [\n    0.5, 0.0,\n    0.0, 0.5,\n    -0.5, 0.0\n  ]\n  verticesInfo = new Float32Array(verticesInfo)\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n  gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW)\n\n\n  gl.vertexAttribPointer(\n    positionLocation1,\n    2,\n    gl.FLOAT,\n    false,\n    8,\n    0\n  );\n\n\n\n  gl.enableVertexAttribArray(positionLocation1);\n\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n  // \u7531\u4e8e\u58f0\u660eu_offset\u7684\u662fvec4\uff0c\u9700\u89814\u4e2a\u5206\u91cf\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u4ee3\u7801\u8c03\u7528gl.uniform3f\u4f1a\u62a5\u9519\u3002\n  // gl.uniform3f(offsetLoc, 0.3, 0.3, 0.3)\n  gl.uniform4f(offsetLoc, 0.4, 0.0, 0.0, 0.9)\n\n  // \u544a\u8bc9webgl\u7ed8\u52363\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 3)\n\n}\n\nmain();\n\n```\n\n\u7ed3\u679c\u5982\u4e0b\uff1a\n\n![image](../../easy-webgl/uniform_09.webp)\n\n**\u53ef\u4ee5\u770b\u5230\uff0c\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u5b9a\u4e49\u7684\u76f8\u540c\u7684u\\_offset\uff0c\u5728\u7ed9u\\_offset\u8d4b\u503c\u540e\uff0c\u540c\u65f6\u4f5c\u7528\u4e8e\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668**\n\n## \u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7740\u8272\u7a0b\u5e8f\n\n\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d[\u3010WebGL\u3011\u6df1\u5165\u7406\u89e3\u5c5e\u6027\u548c\u7f13\u51b2](https://juejin.cn/user/387441915346606/posts)\u4e86\u89e3\u5230\u9876\u70b9\u6570\u7ec4\u662f\u5168\u5c40\u72b6\u6001\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u7740\u8272\u7a0b\u5e8f\u3002\n\n\u548c\u9876\u70b9\u6570\u7ec4\u4e0d\u540c\uff0c\u5168\u5c40\u53d8\u91cf\u5c5e\u4e8e\u5355\u4e2a\u7740\u8272\u7a0b\u5e8f\uff0c\u5982\u679c\u591a\u4e2a\u7740\u8272\u7a0b\u5e8f\u6709\u540c\u540d\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u627e\u5230\u6bcf\u4e2a\u5168\u5c40\u53d8\u91cf\u5e76\u8bbe\u7f6e\u81ea\u5df1\u7684\u503c\u3002\n\n```js\nimport initShaders from \"./initShaders.js\";\n\n\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n\n  const vertexShaderSource2 = `\n  uniform vec4 u_offset;\n  void main(){\n      gl_PointSize = 10.0;\n      gl_Position = vec4(0.0, 0.0, 0.0, 1.0) + u_offset;\n  }\n`\n  const fragmentShaderSource2 = `\n  precision mediump float;\n  void main(){\n      gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n  }\n`\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const program2 = initShaders(gl, vertexShaderSource2, fragmentShaderSource2)\n\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n\n\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n\n  gl.uniform4f(offsetLoc, 0.5, 0.5, 0.0, 0.0)\n  // \u5728(0.5, 0.5)\u4f4d\u7f6e\u5904\u7ed8\u5236\u4e00\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n\n  gl.useProgram(program2)\n  gl.drawArrays(gl.POINTS, 0, 1)\n\n}\n\nmain();\n\n```\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u4e24\u4e2a\u7740\u8272\u7a0b\u5e8f\uff0c\u8fd9\u4e24\u4e2a\u7740\u8272\u7a0b\u5e8f\u90fd\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5168\u5c40\u53d8\u91cf\u540du\\_offset\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ea\u4fee\u6539\u4e86program1\u7684offset\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u4f7f\u7528program1\u7ed8\u5236\u65f6\uff0c\u9876\u70b9\u5750\u6807\u5728(0.5,0.5)\u3002\u4f46\u6211\u4eec\u6ca1\u6709\u4fee\u6539program2\u7684offset\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u4f7f\u7528program2\u7ed8\u5236\u65f6\uff0coffset\u9ed8\u8ba4\u4e3a0\uff0c\u56e0\u6b64\u9876\u70b9\u6ca1\u6709\u504f\u79fb\uff0c\u4f4d\u7f6e\u5728(0.0,0.0)\n\n![image](../../easy-webgl/uniform_10.webp)\n\n\u5168\u5c40\u53d8\u91cf\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5168\u5c40\u6709\u6548\uff0c\u5728\u4e00\u6b21\u7ed8\u5236\u8fc7\u7a0b\u4e2d\u4f20\u9012\u7ed9\u7740\u8272\u5668\u7684\u503c\u90fd\u4e00\u6837\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5728\u4e00\u6b21\u7ed8\u5236\u4e2d\u5bf9\u6240\u6709\u9876\u70b9\u4fdd\u6301\u4e00\u81f4\u503c\u3002\u4e09\u4e2a\u9876\u70b9\u5728x\u8f74\u90fd\u504f\u79fb\u4e860.5\n\n```js\nimport initShaders from \"./initShaders.js\";\n\n\n// \u672cDemo\u6f14\u793auniform\u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\uff1a\n// \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cuniform\u53d8\u91cf\u5404\u4e2a\u5206\u91cf\u7684\u9ed8\u8ba4\u503c\u90fd\u662f0\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff0cu_offset\u6ca1\u6709\u663e\u793a\u8d4b\u503c\uff0c\n// \u56e0\u6b64u_offset\u5404\u4e2a\u5206\u91cf\u7684\u503c\u90fd\u662f0\nconst main = () => {\n  const canvas = document.getElementById('webgl')\n  const gl = canvas.getContext('webgl2')\n  const vertexShaderSource1 = `\n    attribute vec3 a_position;\n    uniform vec4 u_offset;\n    void main(){\n        gl_PointSize = 10.0;\n        gl_Position = vec4(a_position, 1.0) + u_offset;\n    }\n  `\n  const fragmentShaderSource1 = `\n    precision mediump float;\n    void main(){\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n  `\n  const program1 = initShaders(gl, vertexShaderSource1, fragmentShaderSource1)\n  const positionLocation1 = gl.getAttribLocation(program1, 'a_position')\n  const offsetLoc = gl.getUniformLocation(program1, 'u_offset')\n  console.log('offsetLoc...', offsetLoc)\n  let verticesInfo = [\n    0.5, 0.0,\n    0.0, 0.5,\n    -0.5, 0.0\n  ]\n  verticesInfo = new Float32Array(verticesInfo)\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n  gl.bufferData(gl.ARRAY_BUFFER, verticesInfo, gl.STATIC_DRAW)\n\n\n  gl.vertexAttribPointer(\n    positionLocation1,\n    2,\n    gl.FLOAT,\n    false,\n    8,\n    0\n  );\n\n\n\n  gl.enableVertexAttribArray(positionLocation1);\n\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program1)\n  gl.uniform4f(offsetLoc, 0.5, 0.0, 0.0, 0.0)\n  // \u544a\u8bc9webgl\u7ed8\u52363\u4e2a\u70b9\n  gl.drawArrays(gl.POINTS, 0, 3)\n\n}\n\nmain();\n\n```\n\n![image](../../easy-webgl/uniform_11.webp)\n"})}}}]);
//# sourceMappingURL=A000.936388ca.chunk.js.map