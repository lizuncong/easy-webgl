{"version":3,"file":"static/js/A011.9959bbe5.chunk.js","mappings":"0JAOE,QAJA,WACE,OAAOA,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,OAAQ,gnFAC3B,C","sources":["dynamic/pages/坐标系统/纹理坐标.jsx"],"sourcesContent":["import React from \"react\";\n  import MarkDown from \"@/components/markdown\";\n  \n  function Index() {\n    return <MarkDown srcDoc={\"## 纹理坐标\\n\\n纹理是通过“纹理坐标”来引用的， 纹理坐标 0.0 到 1.0 对应纹理从左到右，0.0 到 1.0 对应第一个像素所在行到最后一行。纹理坐标是没有上下的概念的，主要是依据传递给WebGL的纹理数据，纹理数据的开头对应纹理坐标(0, 0)， 结尾对应纹理坐标(1, 1)。\\n\\n## 简述\\n在OpenGL中，纹理坐标的原点在左下角，glTexImage2D函数期望传入的像素数组中的数据以自下而上的顺序存储。而WebGL的texImage2D函数只是基于glTexImage2D的简单封装，因此理论上也是期望传入的像素数组中的数据以自下而上的顺序存储。这就意味着，在WebGL中，纹理坐标的原点也是在左下角。\\n\\n但是图片类型的纹理数据比较特殊，由于在浏览器设计之初，复制图片像素数据都是从左上角开始，这就导致传入给WebGL的texImage2D函数的像素数据是从上到下存储的。就会导致绘制的结果是上下颠倒的。\\n\\n因此，在WebGL中，关于纹理坐标原点需要分两种场景：\\n- 图片类型的纹理数据，纹理坐标原点在左上角\\n- 其他类型的纹理数据，纹理坐标原点在左下角\\n\\n实际上，上或者下在纹理坐标空间中是没有意义的，毕竟底层的glTexImage2D最终接收的是像素数组，纹理坐标(0,0)对应数据的开头，(1,1)对应数据的结尾\"} />;\n  }\n  \n  export default Index;"],"names":["_jsx","MarkDown","srcDoc"],"sourceRoot":""}